{"version":3,"sources":["ng://ngx-wooapi/helper.service.ts","ng://ngx-wooapi/products/woocommerce-products.service.ts","ng://ngx-wooapi/tags/woocommerce-tags.service.ts","ng://ngx-wooapi/categories/woocommerce-categories.service.ts","ng://ngx-wooapi/auth/auth.service.ts","ng://ngx-wooapi/orders/order.service.ts","ng://ngx-wooapi/coupon/coupon.service.ts","ng://ngx-wooapi/customer/customer.service.ts","ng://ngx-wooapi/order-notes/order-notes.service.ts","ng://ngx-wooapi/products/product.interface.ts","ng://ngx-wooapi/tags/product-tags.interface.ts","ng://ngx-wooapi/categories/product-categories.interface.ts","ng://ngx-wooapi/auth/auth.interface.ts"],"names":["WoocommerceHelperService","prototype","handleError","error","ErrorEvent","console","Observable","throw","message","log","includeQuery","query","queryPatch","Object","keys","forEach","key","toString","includeEncoded","params","FormData","append","includeResponseHeader","response","responseBodyKey","headers","get","responseData","body","Injectable","WoocommerceProductsService","httpClient","wooHelper","this","createProduct","payload","_this","post","pipe","catchError","err","retrieveProduct","id","retrieveProducts","observe","map","value","updateProduct","put","deleteProduct","delete","retrieveProductReviews","product_id","retrieveProductReview","review_id","HttpClient","WoocommerceTagsService","createTag","retrieveTag","retrieveTags","updateTag","deleteagT","WoocommerceCategoriesService","createCategory","category","retrieveCategory","retrieveCategories","updateCategory","deleteCategory","AuthService","createNonce","register","registerData","retrivePassword","username","user_login","getAuthToken","generateAuthCookie","data","WoocommerceOrderService","createOrder","order","retriveOrder","listAllOrder","updateOrder","deleteOrder","WoocommerceCouponService","createCoupon","coupon","retriveCoupon","retriveCoupons","updateCoupon","deleteCoupon","WoocommerceCustomerService","createCustomers","customer","retriveCustomers","updateCustomers","WoocommerceOrderNoteService","createNote","note","retriveNote","noteid","retriveNotes","deleteNote"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class  WoocommerceHelperService {\n  constructor() { }\n\n\n  handleError(error: HttpErrorResponse): Observable<any> {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n        console.log('Backend response', error);\n        return Observable.throw(error.error);\n    }\n    // return an observable with a user-facing error message\n    return Observable.throw({message: 'Something bad happened; please try again later.'});\n  }\n\n  includeQuery(query = {}) {\n    const queryPatch = {};\n    Object.keys(query).forEach(key => {\n      queryPatch[key] = query[key].toString();\n    });\n    return queryPatch;\n  }\n\n  includeEncoded(query = {}) {\n    const params = new FormData();\n    Object.keys(query).forEach((key) => {\n      params.append(key, query[key]);\n    });\n    console.log(params);\n    return params;\n  }\n\n  includeResponseHeader(response, responseBodyKey?: string) {\n    const headers = {};\n    response.headers.keys().forEach(key => {\n      headers[key] = response.headers.get(key);\n    });\n    let responseData = {};\n    if (responseBodyKey) {\n      responseData[responseBodyKey] = response.body;\n    } else {\n      responseData = response.body;\n    }\n    responseData['headers'] = headers;\n    return responseData;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport {\n  Product,\n  ProductQuery,\n  RetrieveProductsResponse,\n  ProductReviewsResponse,\n  ProductReview,\n  // ProductCountQuery\n } from './product.interface';\nimport { WoocommerceHelperService } from '../helper.service';\n\n@Injectable()\nexport class WoocommerceProductsService {\n\n  constructor(\n    private httpClient: HttpClient,\n    private wooHelper: WoocommerceHelperService\n  ) { }\n\n  /**\n   * Create a Product\n   * @param payload: Product\n   */\n  createProduct(payload: Product): Observable<Product> {\n    return this.httpClient.post<Product>(`products`, payload)\n      .pipe(catchError(err => this.wooHelper.handleError(err)));\n  }\n\n  /**\n   * Retrieve a product\n   */\n  retrieveProduct(id: number): Observable<Product> {\n    return this.httpClient.get<Product>(`products/${id}`)\n      .pipe(catchError(err => this.wooHelper.handleError(err)));\n  }\n\n  /**\n   * Retrieve list of product\n   */\n  retrieveProducts(query?: ProductQuery): Observable<RetrieveProductsResponse> {\n    return this.httpClient.get(`products`, {params: this.wooHelper.includeQuery(query), observe: 'response'})\n      .pipe(\n        map(value => this.wooHelper.includeResponseHeader(value, 'products')),\n        catchError(err => this.wooHelper.handleError(err)));\n  }\n\n  /**\n   * Update Product\n   */\n  updateProduct(id: number, payload: Product): Observable<Product> {\n    return this.httpClient.put<Product>(`products/${id}`, payload)\n    .pipe(catchError(err => this.wooHelper.handleError(err)));\n  }\n\n  /**\n   * Update Product\n   */\n  deleteProduct(id: number): Observable<Product> {\n    return this.httpClient.delete<Product>(`products/${id}`)\n    .pipe(catchError(err => this.wooHelper.handleError(err)));\n  }\n\n  /**\n   * Retrieve product reviews by product id\n   */\n  retrieveProductReviews(product_id: string): Observable<ProductReviewsResponse> {\n    return this.httpClient.get<ProductReviewsResponse>(`products/${product_id}/reviews`)\n    .pipe(catchError(err => this.wooHelper.handleError(err)));\n  }\n\n  /**\n   * Retrieve product reviews by product id\n   */\n  retrieveProductReview(product_id: number, review_id: number): Observable<ProductReview> {\n    return this.httpClient.get<ProductReview>(`products/${product_id}/reviews/${review_id}`)\n    .pipe(catchError(err => this.wooHelper.handleError(err)));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport {\n  ProductTag,\n  TagQuery\n } from './product-tags.interface';\nimport { WoocommerceHelperService } from '../helper.service';\n\n@Injectable()\nexport class WoocommerceTagsService {\n\n  constructor(\n    private httpClient: HttpClient,\n    private wooHelper: WoocommerceHelperService\n  ) { }\n\n  /**\n   * Create a Tag\n   * @param payload\n   */\n  createTag(payload: ProductTag): Observable<ProductTag> {\n    return this.httpClient.post<ProductTag>(`tags`, payload)\n      .pipe(catchError(err => this.wooHelper.handleError(err)));\n  }\n\n  /**\n   * Retrieve a tag\n   */\n  retrieveTag(id: number): Observable<ProductTag> {\n    return this.httpClient.get<ProductTag>(`tags/${id}`)\n      .pipe(catchError(err => this.wooHelper.handleError(err)));\n  }\n\n  /**\n   * Retrieve list of Tag\n   */\n  retrieveTags(query?: TagQuery): Observable<ProductTag[]> {\n    return this.httpClient.get(`tags`,\n      {\n        params: this.wooHelper.includeQuery(query)\n      })\n      .pipe(\n        catchError(err => this.wooHelper.handleError(err)));\n  }\n\n  /**\n   * Update Tag\n   */\n  updateTag(id: number, payload: ProductTag): Observable<ProductTag> {\n    return this.httpClient.put<ProductTag>(`tags/${id}`, payload)\n    .pipe(catchError(err => this.wooHelper.handleError(err)));\n  }\n\n  /**\n   * Delete Tag\n   */\n  deleteagT(id: number): Observable<ProductTag> {\n    return this.httpClient.delete<ProductTag>(`tags/${id}`)\n    .pipe(catchError(err => this.wooHelper.handleError(err)));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport {\n  ProductCategory,\n  CategoryQuery\n } from './product-categories.interface';\nimport { WoocommerceHelperService } from '../helper.service';\n\n@Injectable()\nexport class WoocommerceCategoriesService {\n\n  constructor(\n    private httpClient: HttpClient,\n    private wooHelper: WoocommerceHelperService\n  ) { }\n\n  /**\n   * Create a Category\n   * @param payload: Product\n   */\n  createCategory(category: ProductCategory): Observable<ProductCategory> {\n    return this.httpClient.post<ProductCategory>(`products/categories`, category)\n      .pipe(catchError(err => this.wooHelper.handleError(err)));\n  }\n\n  /**\n   * Retrieve a Category\n   */\n  retrieveCategory(id: number): Observable<ProductCategory> {\n    return this.httpClient.get<ProductCategory>(`products/categories/${id}`)\n      .pipe(catchError(err => this.wooHelper.handleError(err)));\n  }\n\n  /**\n   * Retrieve list of Category\n   */\n  retrieveCategories(query?: CategoryQuery): Observable<CategoryQuery[]> {\n    return this.httpClient.get(`products/categories`,\n      {\n        params: this.wooHelper.includeQuery(query)\n      })\n      .pipe(\n        catchError(err => this.wooHelper.handleError(err)));\n  }\n\n  /**\n   * Update Category\n   */\n  updateCategory(id: number, payload: ProductCategory): Observable<ProductCategory> {\n    return this.httpClient.put<ProductCategory>(`products/categories/${id}`, payload)\n    .pipe(catchError(err => this.wooHelper.handleError(err)));\n  }\n\n  /**\n   * Delete Category\n   */\n  deleteCategory(id: number): Observable<ProductCategory> {\n    return this.httpClient.delete<ProductCategory>(`products/categories/${id}`)\n    .pipe(catchError(err => this.wooHelper.handleError(err)));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\n\nimport { WoocommerceHelperService } from '../helper.service';\nimport { CreateNonce, CreateNonceRes, RegisterPayload, LoginPayload } from './auth.interface';\nimport { Observable } from 'rxjs';\n\n// Plugins used https://wordpress.org/plugins/json-api-user/\n\n@Injectable()\nexport class AuthService {\n\n  constructor(\n    private httpClient: HttpClient,\n    private wooHelper: WoocommerceHelperService\n  ) { }\n\n  createNonce(payload: CreateNonce): Observable<CreateNonceRes> {\n    return this.httpClient.get(`api/get_nonce/`, {params: this.wooHelper.includeQuery(payload)})\n      .pipe(catchError(err => this.wooHelper.handleError(err)));\n  }\n\n  register(registerData: RegisterPayload) {\n    const payload = this.wooHelper.includeEncoded(registerData);\n    return this.httpClient.post(`api/user/register/`, payload)\n      .pipe(catchError(err => this.wooHelper.handleError(err)));\n  }\n\n  retrivePassword(username: string) {\n    const payload = this.wooHelper.includeEncoded({user_login: username});\n    return this.httpClient.post(`api/user/retrieve_password/`, payload)\n      .pipe(catchError(err => this.wooHelper.handleError(err)));\n  }\n\n  getAuthToken(payload: LoginPayload) {\n    return this.httpClient.post(`wp-json/jwt-auth/v1/token`, payload)\n    .pipe(catchError(err => this.wooHelper.handleError(err)));\n  }\n\n  generateAuthCookie(data: LoginPayload) {\n    return this.httpClient.post(`api/user/generate_auth_cookie/`, this.wooHelper.includeEncoded(data))\n      .pipe(catchError(err => this.wooHelper.handleError(err)));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { WoocommerceHelperService } from '../helper.service';\nimport { Order } from './orders.interface';\n\n@Injectable()\nexport class WoocommerceOrderService {\n\n  constructor(\n    private httpClient: HttpClient,\n    private wooHelper: WoocommerceHelperService\n  ) { }\n\n  createOrder(order: Order): Observable<Order> {\n    return this.httpClient.post<Order>(`orders`, order)\n      .pipe(catchError(err => this.wooHelper.handleError(err)));\n  }\n\n  retriveOrder(id: string): Observable<Order> {\n    return this.httpClient.get<Order>(`orders/${id}`)\n      .pipe(catchError(err => this.wooHelper.handleError(err)));\n  }\n\n  listAllOrder(): Observable<Order[]>  {\n    return this.httpClient.get<Order[]>(`orders`)\n      .pipe(catchError(err => this.wooHelper.handleError(err)));\n  }\n\n  updateOrder(order: Order): Observable<Order>  {\n    return this.httpClient.put<Order>(`orders/${order.id}`, order)\n      .pipe(catchError(err => this.wooHelper.handleError(err)));\n  }\n\n  deleteOrder(id: string): Observable<Order>  {\n    return this.httpClient.delete<Order>(`orders/${id}`)\n      .pipe(catchError(err => this.wooHelper.handleError(err)));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { WoocommerceHelperService } from '../helper.service';\nimport { Coupon } from './coupon.interface';\n\n@Injectable()\nexport class WoocommerceCouponService {\n\n  constructor(\n    private httpClient: HttpClient,\n    private wooHelper: WoocommerceHelperService\n  ) { }\n\n  \n  createCoupon(coupon: Coupon): Observable<Coupon> {\n    return this.httpClient.post<Coupon>(`coupons`, coupon)\n      .pipe(catchError(err => this.wooHelper.handleError(err)));\n  }\n\n  retriveCoupon(id: number): Observable<Coupon> {\n    return this.httpClient.get<Coupon>(`coupons/${id}`)\n      .pipe(catchError(err => this.wooHelper.handleError(err)));\n  }\n\n  retriveCoupons(): Observable<Coupon> {\n    return this.httpClient.get<Coupon>(`coupons`)\n      .pipe(catchError(err => this.wooHelper.handleError(err)));\n  }\n\n  updateCoupon(coupon: Coupon, id: number): Observable<Coupon> {\n    return this.httpClient.post<Coupon>(`coupons/${id}`, coupon)\n      .pipe(catchError(err => this.wooHelper.handleError(err)));\n  }\n\n  deleteCoupon(id: number): Observable<Coupon> {\n    return this.httpClient.delete<Coupon>(`coupons/${id}?force=true`)\n      .pipe(catchError(err => this.wooHelper.handleError(err)));\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { WoocommerceHelperService } from '../helper.service';\nimport { Customer } from './customer.interface';\n\n@Injectable()\nexport class WoocommerceCustomerService {\n\n  constructor(\n    private httpClient: HttpClient,\n    private wooHelper: WoocommerceHelperService\n  ) { }\n\n  /**\n   * Create a customer\n   * @param customer: Customer\n   */\n  createCustomers(customer: Customer): Observable<Customer> {\n    return this.httpClient.post<Customer>(`customers`, customer)\n      .pipe(catchError(err => this.wooHelper.handleError(err)));\n  }\n\n  /**\n   * Retrive a customer\n   * @param customer: Customer\n   */\n  retriveCustomers(id: number): Observable<Customer> {\n    return this.httpClient.get<Customer>(`customers/${id}`)\n      .pipe(catchError(err => this.wooHelper.handleError(err)));\n  }\n\n  /**\n   * Update a customer\n   * @param customer: Customer\n   */\n  updateCustomers(id: number, customer: Customer): Observable<Customer> {\n    return this.httpClient.put<Customer>(`customers/${id}`, customer)\n      .pipe(catchError(err => this.wooHelper.handleError(err)));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { WoocommerceHelperService } from '../helper.service';\nimport { OrderNote, OrderNoteRes } from './order-notes.interface';\n\n@Injectable()\nexport class WoocommerceOrderNoteService {\n\n  constructor(\n    private httpClient: HttpClient,\n    private wooHelper: WoocommerceHelperService\n  ) { }\n\n  /**\n   * Create a order note\n   * URL: https://woocommerce.github.io/woocommerce-rest-api-docs/#create-an-order-note\n   */\n  createNote(id: number, note: OrderNote): Observable<OrderNoteRes> {\n    return this.httpClient.post<OrderNoteRes>(`orders/${id}/notes`, note)\n      .pipe(catchError(err => this.wooHelper.handleError(err)));\n  }\n\n  /**\n   * Retrive a order note\n   * URL: https://woocommerce.github.io/woocommerce-rest-api-docs/#retrieve-an-order-note\n   */\n  retriveNote(id: number, noteid: number ): Observable<OrderNoteRes> {\n    return this.httpClient.get<OrderNoteRes>(`orders/${id}/notes/${noteid}`)\n      .pipe(catchError(err => this.wooHelper.handleError(err)));\n  }\n\n\n   /**\n   * List all order notes\n   * URL: https://woocommerce.github.io/woocommerce-rest-api-docs/#list-all-order-notes\n   */\n  retriveNotes(id: number ): Observable<OrderNoteRes> {\n    return this.httpClient.get<OrderNoteRes>(`orders/${id}/notes/`)\n      .pipe(catchError(err => this.wooHelper.handleError(err)));\n  }\n\n  /**\n   * Delete a order note\n   * URL: https://woocommerce.github.io/woocommerce-rest-api-docs/#delete-an-order-note\n   */\n  deleteNote(id: number, noteid: number ): Observable<OrderNoteRes> {\n    return this.httpClient.delete<OrderNoteRes>(`orders/${id}/notes/${noteid}`)\n      .pipe(catchError(err => this.wooHelper.handleError(err)));\n  }\n\n}\n","export interface Product {\n  id?: number;\n  name?: string;\n  slug?: string;\n  permalink?: string;\n  date_created?: Date;\n  date_created_gmt?: Date;\n  date_modified?: Date;\n  date_modified_gmt?: Date;\n  type?: string;\n  status?: string;\n  featured?: boolean;\n  catalog_visibility?: string;\n  description?: string;\n  short_description?: string;\n  sku?: string;\n  price?: string;\n  regular_price?: string;\n  sale_price?: string;\n  date_on_sale_from?: Date;\n  date_on_sale_from_gmt?: Date;\n  date_on_sale_to?: Date;\n  date_on_sale_to_gmt?: Date;\n  price_html?: string;\n  on_sale?: boolean;\n  purchasable?: boolean;\n  total_sales?: number;\n  virtual?: boolean;\n  downloadable?: boolean;\n  downloads?: Array<any>;\n  download_limit?: number;\n  download_expiry?: number;\n  external_url?: string;\n  button_text?: string;\n  tax_status?: string;\n  tax_class?: string;\n  manage_stock?: boolean;\n  stock_quantity?: number;\n  in_stock?: boolean;\n  backorders?: boolean;\n  backorders_allowed?: boolean;\n  backordered?: boolean;\n  sold_individually?: boolean;\n  weight?: string;\n  dimensions?: any;\n  shipping_required?: boolean;\n  shipping_taxable?: boolean;\n  shipping_class?: string;\n  shipping_class_id?: number;\n  reviews_allowed?: boolean;\n  average_rating?: string;\n  rating_count?: number;\n  related_ids?: Array<any>;\n  upsell_ids?: Array<any>;\n  cross_sell_ids?: Array<any>;\n  parent_id?: number;\n  purchase_note?: string;\n  categories?: Array<any>;\n  tags?: Array<any>;\n  attributes?: Array<any>;\n  default_attributes?: Array<any>;\n  variations?: Array<any>;\n  grouped_products?: Array<string>;\n  menu_order?: number;\n  meta_data?: Array<any>;\n}\n\nexport interface RetrieveProductsResponse {\n  products?: Product[];\n  headers?: Array<any>;\n}\n\n\nexport enum ProductOrder {\n  'desc' = 'desc',\n  'asc' = 'asc'\n}\nexport enum ProductOrderBy {\n  'date'= 'date',\n  'id'= 'id',\n  'include'= 'include',\n  'title'= 'title',\n  'slug'= 'slug'\n}\n\nexport interface ProductQuery {\n  context?: string;\n  page?: number;\n  per_page?: number;\n  search?: string;\n  after?: string;\n  before?: string;\n  exclude?: Array<any>;\n  include?: Array<any>;\n  offset?: number;\n  order?: ProductOrder;\n  orderby?: ProductOrderBy;\n  parent?: Array<string>;\n  parent_exclude?: Array<string>;\n  slug?: string;\n  status?: string;\n  type?: string;\n  sku?: string;\n  featured?: boolean;\n  category?: string;\n  tag?: string;\n  shipping_class?: string;\n  attribute?: string;\n  attribute_term?: string;\n  tax_class?: string;\n  in_stock?: boolean;\n  on_sale?: boolean;\n  min_price?: string;\n  max_price?: string;\n}\n\nexport interface ProductReview {\n  id?: number;\n  review?: string;\n  date_created?: Date;\n  date_created_gmt?: Date;\n  rating?: number;\n  name?: string;\n  email?: string;\n  verified?: boolean;\n}\n\nexport interface ProductReviewsResponse {\n  product_reviews?: ProductReview[];\n}\n","export interface ProductTag {\n  id?: number;\n  name?: string;\n  slug?: string;\n  description?: string;\n  count?: number;\n}\n\nexport enum TagOrder {\n  'desc' = 'desc',\n  'asc' = 'asc'\n}\nexport enum TagOrderBy {\n  'id'= 'id',\n  'include'= 'include',\n  'name'= 'name',\n  'slug'= 'slug',\n  'term_group' = 'term_group',\n  'description' = 'description',\n  'count' = 'count'\n}\n\nexport interface TagQuery {\n  context?: string;\n  page?: number;\n  per_page?: number;\n  search?: string;\n  exclude?: Array<any>;\n  include?: Array<any>;\n  offset: number;\n  order?: TagOrder;\n  orderby?: TagOrderBy;\n  hide_empty: boolean;\n  product: number;\n  slug: string;\n}\n","export interface ProductCategory {\n  id?: number;\n  name?: string;\n  slug?: string;\n  parent?: number;\n  description?: string;\n  display?: string;\n  image?: ProductCategoryImage;\n  menu_order?: number;\n  count?: number;\n}\n\nexport interface ProductCategoryImage {\n  id?: number;\n  date_created?: Date;\n  date_created_gmt?: Date;\n  date_modified?: Date;\n  date_modified_gmt?: Date;\n  src?: string;\n  title?: string;\n  alt?: string;\n}\n\nexport enum CategoryOrder {\n  'desc' = 'desc',\n  'asc' = 'asc'\n}\nexport enum CategoryOrderBy {\n  'id'= 'id',\n  'include'= 'include',\n  'name'= 'name',\n  'slug'= 'slug',\n  'term_group' = 'term_group',\n  'description' = 'description',\n  'count' = 'count'\n}\n\nexport interface CategoryQuery {\n  context?: string;\n  page?: number;\n  per_page?: number;\n  search?: string;\n  exclude?: Array<any>;\n  include?: Array<any>;\n  order?: CategoryOrder;\n  orderby?: CategoryOrderBy;\n  hide_empty?: boolean;\n  parent?: number;\n  product?: number;\n  slug?: string;\n}\n","export enum NonceMethod {\n  register = 'register',\n  get_avatar = 'get_avatar',\n  get_userinfo = 'get_userinfo',\n  retrieve_password = 'retrieve_password',\n  validate_auth_cookie = 'validate_auth_cookie',\n  generate_auth_cookie = 'generate_auth_cookie',\n  get_currentuserinfo = 'get_currentuserinfo',\n  get_user_meta = 'get_user_meta',\n  update_user_meta = 'update_user_meta',\n  delete_user_meta = 'delete_user_meta',\n  xprofile = 'xprofile',\n  xprofile_update = 'xprofile_update',\n  fb_connect = 'fb_connect'\n}\n\nexport interface CreateNonce {\n  controller: string;\n  method: string; // NonceMethod\n}\n\nexport interface CreateNonceRes {\n  status: string;\n  controller: string;\n  method: NonceMethod;\n  nonce: string;\n}\n\nexport interface RegisterPayload {\n  username: string;\n  email: string;\n  user_pass?: string;\n  nonce: string;\n  display_name: string;\n  notify: string;\n}\n\nexport interface RegisterRsponse {\n  cookie: string;\n  status: string;\n  user_id: number;\n}\n\nexport interface LoginPayload {\n  username: string;\n  password: string;\n}\n"]}