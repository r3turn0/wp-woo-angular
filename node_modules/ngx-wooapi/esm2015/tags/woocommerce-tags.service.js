/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { catchError } from 'rxjs/operators';
import { WoocommerceHelperService } from '../helper.service';
export class WoocommerceTagsService {
    /**
     * @param {?} httpClient
     * @param {?} wooHelper
     */
    constructor(httpClient, wooHelper) {
        this.httpClient = httpClient;
        this.wooHelper = wooHelper;
    }
    /**
     * Create a Tag
     * @param {?} payload
     * @return {?}
     */
    createTag(payload) {
        return this.httpClient.post(`tags`, payload)
            .pipe(catchError(err => this.wooHelper.handleError(err)));
    }
    /**
     * Retrieve a tag
     * @param {?} id
     * @return {?}
     */
    retrieveTag(id) {
        return this.httpClient.get(`tags/${id}`)
            .pipe(catchError(err => this.wooHelper.handleError(err)));
    }
    /**
     * Retrieve list of Tag
     * @param {?=} query
     * @return {?}
     */
    retrieveTags(query) {
        return this.httpClient.get(`tags`, {
            params: this.wooHelper.includeQuery(query)
        })
            .pipe(catchError(err => this.wooHelper.handleError(err)));
    }
    /**
     * Update Tag
     * @param {?} id
     * @param {?} payload
     * @return {?}
     */
    updateTag(id, payload) {
        return this.httpClient.put(`tags/${id}`, payload)
            .pipe(catchError(err => this.wooHelper.handleError(err)));
    }
    /**
     * Delete Tag
     * @param {?} id
     * @return {?}
     */
    deleteagT(id) {
        return this.httpClient.delete(`tags/${id}`)
            .pipe(catchError(err => this.wooHelper.handleError(err)));
    }
}
WoocommerceTagsService.decorators = [
    { type: Injectable },
];
/** @nocollapse */
WoocommerceTagsService.ctorParameters = () => [
    { type: HttpClient, },
    { type: WoocommerceHelperService, },
];
function WoocommerceTagsService_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    WoocommerceTagsService.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    WoocommerceTagsService.ctorParameters;
    /** @type {?} */
    WoocommerceTagsService.prototype.httpClient;
    /** @type {?} */
    WoocommerceTagsService.prototype.wooHelper;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid29vY29tbWVyY2UtdGFncy5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LXdvb2FwaS8iLCJzb3VyY2VzIjpbInRhZ3Mvd29vY29tbWVyY2UtdGFncy5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUVsRCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFNNUMsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFHN0QsTUFBTTs7Ozs7SUFFSixZQUNVLFlBQ0E7UUFEQSxlQUFVLEdBQVYsVUFBVTtRQUNWLGNBQVMsR0FBVCxTQUFTO0tBQ2Q7Ozs7OztJQU1MLFNBQVMsQ0FBQyxPQUFtQjtRQUMzQixNQUFNLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQWEsTUFBTSxFQUFFLE9BQU8sQ0FBQzthQUNyRCxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQzdEOzs7Ozs7SUFLRCxXQUFXLENBQUMsRUFBVTtRQUNwQixNQUFNLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQWEsUUFBUSxFQUFFLEVBQUUsQ0FBQzthQUNqRCxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQzdEOzs7Ozs7SUFLRCxZQUFZLENBQUMsS0FBZ0I7UUFDM0IsTUFBTSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFDL0I7WUFDRSxNQUFNLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDO1NBQzNDLENBQUM7YUFDRCxJQUFJLENBQ0gsVUFBVSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQ3pEOzs7Ozs7O0lBS0QsU0FBUyxDQUFDLEVBQVUsRUFBRSxPQUFtQjtRQUN2QyxNQUFNLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQWEsUUFBUSxFQUFFLEVBQUUsRUFBRSxPQUFPLENBQUM7YUFDNUQsSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUMzRDs7Ozs7O0lBS0QsU0FBUyxDQUFDLEVBQVU7UUFDbEIsTUFBTSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFhLFFBQVEsRUFBRSxFQUFFLENBQUM7YUFDdEQsSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUMzRDs7O1lBbkRGLFVBQVU7Ozs7WUFWRixVQUFVO1lBUVYsd0JBQXdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSHR0cENsaWVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IGNhdGNoRXJyb3IgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbmltcG9ydCB7XG4gIFByb2R1Y3RUYWcsXG4gIFRhZ1F1ZXJ5XG4gfSBmcm9tICcuL3Byb2R1Y3QtdGFncy5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgV29vY29tbWVyY2VIZWxwZXJTZXJ2aWNlIH0gZnJvbSAnLi4vaGVscGVyLnNlcnZpY2UnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgV29vY29tbWVyY2VUYWdzU2VydmljZSB7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBodHRwQ2xpZW50OiBIdHRwQ2xpZW50LFxuICAgIHByaXZhdGUgd29vSGVscGVyOiBXb29jb21tZXJjZUhlbHBlclNlcnZpY2VcbiAgKSB7IH1cblxuICAvKipcbiAgICogQ3JlYXRlIGEgVGFnXG4gICAqIEBwYXJhbSBwYXlsb2FkXG4gICAqL1xuICBjcmVhdGVUYWcocGF5bG9hZDogUHJvZHVjdFRhZyk6IE9ic2VydmFibGU8UHJvZHVjdFRhZz4ge1xuICAgIHJldHVybiB0aGlzLmh0dHBDbGllbnQucG9zdDxQcm9kdWN0VGFnPihgdGFnc2AsIHBheWxvYWQpXG4gICAgICAucGlwZShjYXRjaEVycm9yKGVyciA9PiB0aGlzLndvb0hlbHBlci5oYW5kbGVFcnJvcihlcnIpKSk7XG4gIH1cblxuICAvKipcbiAgICogUmV0cmlldmUgYSB0YWdcbiAgICovXG4gIHJldHJpZXZlVGFnKGlkOiBudW1iZXIpOiBPYnNlcnZhYmxlPFByb2R1Y3RUYWc+IHtcbiAgICByZXR1cm4gdGhpcy5odHRwQ2xpZW50LmdldDxQcm9kdWN0VGFnPihgdGFncy8ke2lkfWApXG4gICAgICAucGlwZShjYXRjaEVycm9yKGVyciA9PiB0aGlzLndvb0hlbHBlci5oYW5kbGVFcnJvcihlcnIpKSk7XG4gIH1cblxuICAvKipcbiAgICogUmV0cmlldmUgbGlzdCBvZiBUYWdcbiAgICovXG4gIHJldHJpZXZlVGFncyhxdWVyeT86IFRhZ1F1ZXJ5KTogT2JzZXJ2YWJsZTxQcm9kdWN0VGFnW10+IHtcbiAgICByZXR1cm4gdGhpcy5odHRwQ2xpZW50LmdldChgdGFnc2AsXG4gICAgICB7XG4gICAgICAgIHBhcmFtczogdGhpcy53b29IZWxwZXIuaW5jbHVkZVF1ZXJ5KHF1ZXJ5KVxuICAgICAgfSlcbiAgICAgIC5waXBlKFxuICAgICAgICBjYXRjaEVycm9yKGVyciA9PiB0aGlzLndvb0hlbHBlci5oYW5kbGVFcnJvcihlcnIpKSk7XG4gIH1cblxuICAvKipcbiAgICogVXBkYXRlIFRhZ1xuICAgKi9cbiAgdXBkYXRlVGFnKGlkOiBudW1iZXIsIHBheWxvYWQ6IFByb2R1Y3RUYWcpOiBPYnNlcnZhYmxlPFByb2R1Y3RUYWc+IHtcbiAgICByZXR1cm4gdGhpcy5odHRwQ2xpZW50LnB1dDxQcm9kdWN0VGFnPihgdGFncy8ke2lkfWAsIHBheWxvYWQpXG4gICAgLnBpcGUoY2F0Y2hFcnJvcihlcnIgPT4gdGhpcy53b29IZWxwZXIuaGFuZGxlRXJyb3IoZXJyKSkpO1xuICB9XG5cbiAgLyoqXG4gICAqIERlbGV0ZSBUYWdcbiAgICovXG4gIGRlbGV0ZWFnVChpZDogbnVtYmVyKTogT2JzZXJ2YWJsZTxQcm9kdWN0VGFnPiB7XG4gICAgcmV0dXJuIHRoaXMuaHR0cENsaWVudC5kZWxldGU8UHJvZHVjdFRhZz4oYHRhZ3MvJHtpZH1gKVxuICAgIC5waXBlKGNhdGNoRXJyb3IoZXJyID0+IHRoaXMud29vSGVscGVyLmhhbmRsZUVycm9yKGVycikpKTtcbiAgfVxufVxuIl19